[{
    "label": "->Belt.Int.*",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": {"kind": "markdown", "value": "\nMultiplication of two `int` values. Same as the multiplication from `Pervasives`.\n\n## Examples\n\n```rescript\nopen Belt.Int\nassertEqual(2 * 2, 4)\n```\n"},
    "sortText": "*",
    "insertText": "->Belt.Int.*",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->Belt.Int./",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": {"kind": "markdown", "value": "\nDivision of two `int` values. Same as the division from `Pervasives`.\n\n## Examples\n\n```rescript\nopen Belt.Int\nassertEqual(4 / 2, 2)\n```\n"},
    "sortText": "/",
    "insertText": "->Belt.Int./",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->Belt.Int.toString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `int` to a `string`. Uses the JavaScript `String` constructor under the hood.\n\n## Examples\n\n```rescript\nBelt.Int.toString(1)->assertEqual(\"1\")\n```\n"},
    "sortText": "toString",
    "insertText": "->Belt.Int.toString",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->Belt.Int.toFloat",
    "kind": 12,
    "tags": [],
    "detail": "int => float",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `int` to a `float`.\n\n## Examples\n\n```rescript\nBelt.Int.toFloat(1)->assertEqual(1.0)\n```\n"},
    "sortText": "toFloat",
    "insertText": "->Belt.Int.toFloat",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->Belt.Int.-",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": {"kind": "markdown", "value": "\nSubtraction of two `int` values. Same as the subtraction from `Pervasives`.\n\n## Examples\n\n```rescript\nopen Belt.Int\nassertEqual(2 - 1, 1)\n```\n"},
    "sortText": "-",
    "insertText": "->Belt.Int.-",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->Belt.Int.+",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": {"kind": "markdown", "value": "\nAddition of two `int` values. Same as the addition from `Pervasives`.\n\n## Examples\n\n```rescript\nopen Belt.Int\nassertEqual(2 + 2, 4)\n```\n"},
    "sortText": "+",
    "insertText": "->Belt.Int.+",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->X.minus_two",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null,
    "sortText": "minus_two",
    "insertText": "->X.minus_two",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }, {
    "label": "->X.minus_three",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null,
    "sortText": "minus_three",
    "insertText": "->X.minus_three",
    "additionalTextEdits": [{
      "range": {"start": {"line": 10, "character": 16}, "end": {"line": 10, "character": 17}},
      "newText": ""
      }]
  }]
